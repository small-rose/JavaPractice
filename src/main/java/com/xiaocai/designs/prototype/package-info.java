package com.xiaocai.designs.prototype;
/* TODO  原型模式
    -----------------
    克隆羊问题
    ---------------
    传统方式：
      1、new 关键字创建对象，重复创建对象，效率低，重新初始化对象
      2、new Sheep( get ) 对象属性较多时，每次要重新 getter 方法获取属性值
    -------------
    改进思路：
    实现 Cloneable ，调用clone 接口
    -------------
    原型模式 prototype
    它是创建型设计模式
    原理： 将一个对象传给那个要发动创建的对象，这个要发动创建的对象就通过请求原型对象拷贝来实现创建。  对象.clone()
    主要角色：
    --原型类（声明克隆自己的接口）
    --具体的原型类，实现一个克隆自己的操作。
    --客户端：让原型对象克隆自己。
    -------------
    深拷贝方式 参考 deepclone 包
      让对象，实现序列化接口  Serializable, 可克隆接口 Cloneable
      1、没有对象引用直接调用默认的 clone 方法，有对象重写 clone 方法，手动克隆引用对象。
      2、使用流的方式。将对象写入对象流，转出输出流进行序列化，再通过输入流读取，读到对象流。完成深拷贝。

 */